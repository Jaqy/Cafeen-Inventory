@{
    Page.title = "Add Product";

    <!--Validates that there is a genuine input in the fields so no blanks is created-->
    Validation.RequireField("ProductName", "You haven't entered a Product Name");
    //Validation.RequireField("Category", "You haven't entered a Category");
    Validation.RequireField("Price", "You haven't entered a Price");
    Validation.RequireField("PurchasePrice", "You haven't entered a Purchase Price");
    Validation.RequireField("Stock", "You haven't entered Stock");

    //Indlæser de variable der er relevante for tilføjelse af nyt produkt. 
    var ProductName = "";
    var Category = "";
    double Price = 0.0;
    double PurchasePrice = 0.0;
    double Stock = 0.0;

          <!--Opens the database and inserts the data from above-->
    var db = Database.Open("Cafeen");
        <!--Collect the Category from the Database-->
    var CategoryData = db.Query("SELECT ID, Category FROM Category");

    var PriceCommand = "SELECT ID, Price FROM Category";
    var PriceData = db.Query(PriceCommand);

    //Følgende if-sætning hånterer når siden genindlæses efter tryk på submit-knappen. Produkt tilføjes hvis input er valide.
    if(IsPost && Validation.IsValid()){
        ProductName = Request.Form["ProductName"];
        Category = Request.Form["ListCategory"];
        Price = Convert.ToDouble(Request.Form["Price"]);
        PurchasePrice = Convert.ToDouble(Request.Form["PurchasePrice"]);
        Stock = Convert.ToDouble(Request.Form["Stock"]);
        Funcs.AddNewProduct(ProductName, Category, Price, PurchasePrice, Stock); //Kalder AddNewProduct-funktionen fra Funcs.cshtml

        <!--Makes sure no SQL injection attack occurs, by redirecting to product the page after a product is added-->
        Response.Redirect("~/Members/Products");}
}
    <!--The style section contains yellow boxes for error messages to stand out-->
  <h1>Add a product</h1>
  <form method="post">
    <fieldset><!--Creates the form to enter in new data to the database-->
      <legend>Add product to database</legend>
      <p><label for="ProductName">Product Name:</label>
         <input type="text" name="ProductName" value="@Request.Form["ProductName"]" />
          @Html.ValidationMessage("ProductName")
      </p>


<!--
      <p><label for="Category">Category:</label>
         <input type="text" name="Category" value=" Husk razor//Request.Form["Category"]" />
         Husk razor// Html.ValidationMessage("Category")
      </p>
-->
    <p><label for="Category">Category:</label>
<form name="FormCategory" method="post">
  <select name="ListCategory">
            @foreach(var row in CategoryData)
            {
                <option value="@row.Category">@row.Category</option>
            }
   </select>
</form>      
        </p>
      <p><label for="Price">Price:</label>
         <input type="number" name="Price" value="@Request.Form["Price"]" />

          @Html.ValidationMessage("Price")
      </p>

      <p><label for="PurchasePrice">Purchase Price:</label>
         <input type="number" name="PurchasePrice" value="@Request.Form["PurchasePrice"]" />
          @Html.ValidationMessage("PurchasePrice")
      </p>

      <p><label for="Stock">Stock:</label>
         <input type="number" name="Stock" value="@Request.Form["Stock"]" />
          @Html.ValidationMessage("Stock")
      </p>

      <p><input type="submit" name="buttonSubmit" value="Add product" /></p>
    </fieldset>
  </form>

<!--
<script>
    $(document).ready(function () {
        $('.CategoryHide').hide()
        $('#CheckboxCategory').change(function () {
            if (!this.checked)
                $('.CategoryHide').hide();
            else
                $('.CategoryHide').show();
                
        });
    });
</script>


  <form ID="CategoryHide" method="post">
    <h2>Add Category</h2>
    <input type="checkbox" ID="CheckboxCategory"> Add or delete a category
    <fieldset class="CategoryHide" id="CategoryHide">
        <legend>Add a  new category to the database</legend>
      <p><label for="Category">Category:</label>
        </tr>
      <p><label for="Category">Category name:</label>
         <input type="text" name="Category" value="@Request.Form["Price"]" />
      </p>

      <p><label for="Price">Price:</label>
         <input type="number" name="Price" value="@Request.Form["Price"]" />
      </p>

      <p><input type="submit" name="buttonSubmit" value="Add Category" /></p>

    </fieldset>
  </form>


<form>
<table>
<tr class="CategoryHide"><td><input type="text" name="Category" value="@Request.Form["Price"]" /></td></tr>
<tr class="CategoryHide"><td><input type="number" name="Price" value="@Request.Form["Price"]" /></td></tr>
<tr class="CategoryHide"><td>data3</td></tr>
</table>
</form>
-->