
@{
    Page.title = "Product List"; 

    <!--Creates the variables for use on this page.-->
    var db = Database.Open("Cafeen") ;
    var selectCommand = "SELECT * FROM Products";
    var searchTerm = "";

    <!--This code handles the search for Categories. It ensures the search field is not empty, and then selects products from the table that matches the search.-->
    if(!Request.QueryString["searchCategory"].IsEmpty() ) {
        selectCommand = "SELECT * FROM Products WHERE Category = @0";
        searchTerm = Request.QueryString["searchCategory"];
    }

    <!--This code handles the search for product names. The search adds a % infront and after the search term, which ensures that the full Product Name
    string is analysed. As an example, you Påske Bryg will be returned if you search for Bryg.-->
    if(!Request.QueryString["searchProductName"].IsEmpty() ) {
        selectCommand = "SELECT * FROM Products WHERE ProductName LIKE @0";
        searchTerm = "%" + Request["searchProductName"] + "%";
}
    <!--Collects the selectCommand value, so the gridview can be update to reflect the search parameters-->
    var selectedData = db.Query(selectCommand, searchTerm);
    var grid = new WebGrid(source: selectedData, defaultSort: "Category", rowsPerPage:10);



}

    <h2>Inventory List Date: @DateTime.Now </h2>
    <form method="get">
        <fieldset>
        <!--This code handles the category search-->
             <p><label class="field" for="searchCategory">Category to look for:</label><input type="text" name="searchCategory" class="textbox-200" value="@Request.QueryString["searchCategory"]" />
             <input type="Submit" class="Products" value="Search Category"/></p>
        
        <!--This code handles the Product Name search -->
             <p><label class="field" for="SearchProductName">Product to look for:</label><input type="text" name="searchProductName" class="textbox-200" value="@Request.QueryString["searchProductName"]" />
             <input type="Submit" class="Products" value="Search ProductName" /></p>
        
        </fieldset>
    </form>
        <!--Adds the coloumns that shows the database, + the edit link + the delete link-->
    <div>
        @grid.GetHtml(
            tableStyle: "grid",
            headerStyle: "head",
            alternatingRowStyle: "alt",
            columns: grid.Columns(
                grid.Column(format: @<a href="~/Members/EditProduct?id=@item.ID">Edit</a>),
                grid.Column("ProductName"),
                grid.Column("Category"),
                grid.Column("Price"),
                grid.Column("PurchasePrice"),
                grid.Column("Stock"),
                grid.Column(format: @<a href="~/Members/DeleteProduct?id=@item.ID">Delete</a>)
            )
        )
    </div>

