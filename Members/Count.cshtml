
@{
    Page.title = "Count"; 

    var db = Database.Open("Cafeen") ;
    var selectCommand = "SELECT * FROM Products";
    var searchTerm = "";
    <!--This code handles the search for Categories like Øl, or Soda-->
    if(!Request.QueryString["searchCategory"].IsEmpty() ) {
        selectCommand = "SELECT * FROM Products WHERE Category = @0";
        searchTerm = Request.QueryString["searchCategory"];
    }
    <!--This code handles the search for any product name like Tuborg, or Cocio, the search adds a % infront and after the search term, which results in 
    the search searching for the search title anywhere it can-->
    if(!Request.QueryString["searchProductName"].IsEmpty() ) {
    selectCommand = "SELECT * FROM Products WHERE ProductName LIKE @0";
    searchTerm = "%" + Request["searchProductName"] + "%";
}
    var selectedData = db.Query(selectCommand, searchTerm);
    var grid = new WebGrid(source: selectedData, defaultSort: "Category", rowsPerPage:10);

    if(IsPost){
        Funcs.AddLogData(); //Hvis siden genfriskes vha. af submit, da tilføjes data'en fra Products tabellen til Logs tabellen.
    }

}

    <h2>Inventory List</h2>
    <form method="get">
        <div><!--This code handles the category search-->
             <label for="searchCategory">Category to look for:</label>
             <input type="text" name="searchCategory" value="@Request.QueryString["searchCategory"]" />
             <input type="Submit" value="Search Category" /><br/>
             (Leave blank to list all products.)<br/>
        </div>
        <div><!--This code handles the Product Name search -->
            <label for="SearchProductName">Product to look for:</label>
             <input type="text" name="searchProductName" value="@Request.QueryString["searchProductName"]" />
             <input type="Submit" value="Search ProductName" /><br/>
        </div>
    </form>
        <!--Adds the coloumns that shows the database, + the edit link + the delete link-->
    <div>
        @grid.GetHtml(
            tableStyle: "grid",
            headerStyle: "head",
            alternatingRowStyle: "alt",
            columns: grid.Columns(
                grid.Column(format: @<a href="~/Members/EditProduct?id=@item.ID">Edit</a>),
                grid.Column("ProductName"),
                grid.Column("Category"),
                grid.Column("Price"),
                grid.Column("PurchasePrice"),
                grid.Column("Stock"),
                grid.Column(format: @<a href="~/Members/DeleteProduct?id=@item.ID">Delete</a>)
            )
        )
    </div>
@{
DataTable dt = new DataTable();
dt.Columns.Add("ProductName", typeof(string));
dt.Columns.Add("Category", typeof(string));
dt.Columns.Add("Price", typeof(int));
dt.Columns.Add("PurchasePrice", typeof(int));
dt.Columns.Add("Stock", typeof(int));
dt.Columns.Add("New 1Stock", typeof(int));

DataRow row1 = dt.NewRow();
row1["ProductName"] = "Bajer";
row1["Category"] = "Øl";
row1["Price"] = 10;
row1["PurchasePrice"] = 7;
row1["Stock"] = 200;
row1["New Stock"] = 200;
dt.Rows.Add(row1);
}



    <form action="Count.cshtml" method="post"><!--Button for submitting days count. Calls function that moves data from Products table to Logs table-->
            <input type="Submit" value="Save Count" />
    </form>

