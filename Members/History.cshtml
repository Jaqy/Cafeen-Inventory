@{
    Page.title = "History";

    <!--Validates that there is a genuine input in the fields so no blanks is created-->
    Validation.RequireField("StartDate", "You haven't entered a start date");
    Validation.RequireField("EndDate", "You haven't entered an end date");

    var db = Database.Open("Cafeen");
    var searchTerm_Start = "";
    var searchTerm_End = "";
    var CountType = "";
    var selectCommand = "SELECT * FROM History";
  
    if (IsPost && Validation.IsValid()) 
        {
        searchTerm_Start = Request["StartDate"];
        searchTerm_End = Request["EndDate"];
        CountType = Request["CountOption"];
        
        if ( CountType == "")
            {
            selectCommand ="SELECT * FROM History WHERE Date >= @0 AND Date <= @1";
            }
        
        else 
            {
            selectCommand ="SELECT * FROM History WHERE Date >= @0 AND Date <= @1 AND CountType = @2";
            }
        
        }

    var SelectedData = db.Query(selectCommand, searchTerm_Start, searchTerm_End, CountType);
    var grid = new WebGrid(source: SelectedData, defaultSort: "Date", rowsPerPage:50);
}

<h1>Search through history</h1>
<form method="post">
    <div id="grid">
        <p>
            <label class="logField" for="StartDate">Start Date:</label>
            <input type="text" name="StartDate" id="datepicker" size="30" value="@Request.QueryString["StartDate"]" />
            @Html.ValidationMessage("StartDate")
        </p>
        
        <p>
            <label class="logField" for="EndDate">End Date:</label>
            <input type="text" name="EndDate" id="datepicker2" size="30" value="@Request.QueryString["EndDate"]" />
            @Html.ValidationMessage("EndDate")
        </p>
             
        <p>
            <label>Type of inventory count</label>
        </p>
             
        <select name="CountOption">
            <option value=""></option>
            <option value="Opening">Opening</option>
            <option value="Closing">Closing</option>
            <option value="SpecialEventOpening">Special Event Opening</option>
            <option value="SpecialEventClosing">Special Event Closing</option>
        </select>
                
        <input type="Submit" value="Search"/>
            <hr/>
            @grid.GetHtml(
            tableStyle: "grid",
            headerStyle: "head",
            alternatingRowStyle: "alt",
            columns: grid.Columns(
                grid.Column("ProductName"),
                grid.Column("Category"),
                grid.Column("Price"),
                grid.Column("PurchasePrice"),
                grid.Column("Stock"),
                grid.Column("CountType"),
                grid.Column(
                            "Date",
                            canSort: true, 
                            format:@<text> @item.Date.ToString("dd-MM-yy")</text>)
            )
        )
                
    </div>
</form>

<!--Dette er jQuery Datepicker, som kaldes når griddet laves ovenfor i vores grid.-->
<title>jQuery UI Datepicker - Format date</title>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="/resources/demos/style.css">

<script>
    $(function() 
        {
        $( "#datepicker" ).datepicker({ dateFormat: 'dd-mm-yy' });
        $( "#format" ).change(function() 
            {
            $( "#datepicker" ).datepicker( "option", "dateFormat", $( this ).val() );
            });
        });
</script>

<script>
    $(function() {
    $( "#datepicker2" ).datepicker({ dateFormat: 'dd-mm-yy' });
    $( "#format" ).change(function() 
        {
        $( "#datepicker2" ).datepicker( "option", "dateFormat", $( this ).val() );
        });
    });
</script>
 

 